{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity * cartItem.price, 0));\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));","map":{"version":3,"sources":["/Users/mac/crwn-clothing-breaker/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartTotal","reduce","accumulatedQuantity","cartItem","quantity","price","selectCartItemsCount"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE5CE,IAAI,IAAIA,IAAI,CAACE,SAF+B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE7CE,IAAI,IAAIA,IAAI,CAACI,MAFgC,CAAvC;AAKP,OAAO,MAAMC,eAAe,GAAGR,cAAc,CAC5C,CAACI,eAAD,CAD4C,EAE3CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CACT,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAGC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACE,KAD7E,EAER,CAFQ,CAF8B,CAAtC;AAOP,OAAO,MAAMC,oBAAoB,GAAGd,cAAc,CACjD,CAACI,eAAD,CADiD,EAE/CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CACV,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAGC,QAAQ,CAACC,QADxD,EAET,CAFS,CAFkC,CAA3C","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n\t[selectCart],\n\tcart => cart.cartItems\n\t);\n\nexport const selectCartHidden = createSelector(\n\t[selectCart],\n\tcart => cart.hidden\n\t);\n\nexport const selectCartTotal = createSelector(\n\t[selectCartItems],\n\t cartItems => cartItems.reduce(\n\t\t    (accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity * cartItem.price,\n\t\t     0)\n\t);\n\nexport const selectCartItemsCount = createSelector(\n\t[selectCartItems],\n\t\t cartItems => cartItems.reduce(\n\t\t    (accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity,\n\t\t     0)\n\t);\n"]},"metadata":{},"sourceType":"module"}